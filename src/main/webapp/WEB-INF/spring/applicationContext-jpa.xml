<?xml version="1.0" encoding="UTF-8"?>
<!-- Application context definition for PetClinic on JPA. -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
   xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   <!-- ========================= RESOURCE DEFINITIONS ========================= -->

   <!-- Activates a load-time weaver for the context. Any bean within the context that implements LoadTimeWeaverAware (such as LocalContainerEntityManagerFactoryBean) 
      will receive a reference to the autodetected load-time weaver. -->
   <!-- <context:load-time-weaver /> -->

   <context:property-placeholder location="classpath:jdbc.properties" system-properties-mode="OVERRIDE" />

   <!-- ========================= DATASOURCE DEFINITION ========================= -->


   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
      p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />

   <!-- JNDI DataSource for JEE environments -->
   <!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/petclinic"/> -->

   <!-- Database initializer. If any of the script fails, the initialization stops. -->
   <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
   <jdbc:initialize-database data-source="dataSource">
      <jdbc:script location="${jdbc.initLocation}" />
      <jdbc:script location="${jdbc.dataLocation}" />
   </jdbc:initialize-database>


   <!-- ========================= JPA DEFINITION ========================= -->

   <!-- JPA EntityManagerFactory -->
   <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" p:dataSource-ref="dataSource">
      <property name="dataSource" ref="dataSource" />
      <property name="jpaVendorAdapter">
         <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            <property name="database" value="${jpa.database}" />
            <property name="showSql" value="${jpa.showSql}" />
         </bean>
      </property>
   </bean>

   <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
   <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" p:entityManagerFactory-ref="entityManagerFactory" />


   <!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

   <context:annotation-config />

   <tx:annotation-driven />

   <!-- Simply defining this bean will cause requests to owner names to be saved. This aspect is defined in petclinic.jar's META-INF/aop.xml 
      file. Note that we can dependency inject this bean like any other bean. -->
   <bean class="org.springframework.samples.petclinic.aspects.UsageLogAspect" p:historySize="300" />

   <!-- Post-processor to perform exception translation on @Repository classes (from native exceptions such as JPA PersistenceExceptions to Spring's 
      DataAccessException hierarchy). -->
   <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

   <!-- Will automatically be transactional due to @Transactional. EntityManager will be auto-injected due to @PersistenceContext. PersistenceExceptions 
      will be auto-translated due to @Repository. -->
   <bean id="clinic" class="org.springframework.samples.petclinic.jpa.EntityManagerClinic" />

</beans>